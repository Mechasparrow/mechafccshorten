 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

var fs = require('fs');
var express = require('express');
var app = express();
var checkUrl = require("valid_url");

var MongoClient = require('mongodb').MongoClient;
var mongo_username = process.env.USERNAME;
var mongo_password = process.env.PASSWORD;

var url = "mongodb://" + mongo_username + ":" + mongo_password + "@ds151222.mlab.com:51222/mechaurlshort";



if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

app.use('/public', express.static(process.cwd() + '/public'));

app.route('/_api/package.json')
  .get(function(req, res, next) {
    console.log('requested');
    fs.readFile(__dirname + '/package.json', function(err, data) {
      if(err) return next(err);
      res.type('txt').send(data.toString());
    });
  });
  
app.route('/')
    .get(function(req, res) {
		  res.sendFile(process.cwd() + '/views/index.html');
    })

//Mongo Code

app.route('/:code')
  .get(function (req, res) {
    
    var code = req.params.code;
  
    var converted_code = parseInt(code);
  
    if (!isNaN(converted_code)) {
      redirect(converted_code, res)
    }else if (isNaN(converted_code)) {
      console.log("non a number");
    }
  
  
  
    

  })



app.route('/new/*')
  .get(function (req, res) {
    
    var input = req.url
    
    input = input.substring(('/new/').length, input.length)
    
    console.log(input);
    
    var url_code = parseInt(input);
    console.log(url_code)
  
    var valid_url = checkUrl(input);
      
    if (valid_url) {
      var result = shorten_url(input);
      console.log(process.env.USERNAME);
        
      result.then (function (value) {
        res.json(value);
      })
        
    }else {
      var error = {"error":"Wrong url format, make sure you have a valid protocol and real site."};
      
      res.json(error);
    }
  
  
  })

function shorten_url(url_to_shorten) {
  
  var number = generateNumber();
  
  
  var promise = new Promise (function (resolve, reject) {
    
    MongoClient.connect(url, function (err, db) {
      console.log("database connected");

      var collection = db.collection('shortenedurls');
      
      var findPromise = new Promise (function (resolve, reject) {
        collection.find().toArray(function (err, docs) {
          resolve(docs);
          
          if (err) {
            reject(err);
          }
        })
      });
      
      findPromise.then (function (docs) {
        
        console.log(docs.length);
        
        /**collection.insert({
          hello: "world"
        })**/
      
        if (docs.length == 0) {
        
          var result = {
            "original_url": url_to_shorten,
            "short_url": "https://mechafccshorten.glitch.me/" + number
          }
          
          collection.insert({
            url: url_to_shorten,
            num: number
          });
          
          db.close();
          resolve(result);
          
        }else {
          
          var match_number = false
          
          for (var i = 0; i < docs.length; i ++) {
            var doc_num = docs[i].num;
            console.log(doc_num);
            
            if (number == doc_num) {
              match_number = true;
              break;
            }else {
              continue;
            }
            
          }    

          if (match_number != true) {
            console.log("no conflict");
            
            var result = {
              "original_url": url_to_shorten,
              "short_url": "https://mechafccshorten.glitch.me/" + number
            }
          
            collection.insert({
              url: url_to_shorten,
              num: number
            });
          
            db.close();
            resolve(result);
            
            
          }else {
            console.log("conflict");
            
            db.close();
            
            var new_try = shorten_url(url_to_shorten)
            new_try.then (function (result) {
              resolve(result);
            });
            
          }
          
          
      
          db.close();
          
        }
        
      })
      
      
      

    })

    
    
    
  })
  
  
  return promise; 
  
  
}

function generateNumber() {
  
  var numbers = [];
  
  for (var i = 0; i < 4; i ++) {
    var number = Math.floor(Math.random() * (10)) + 0
    numbers.push(number.toString())
    
  }
  
  var result = numbers.join("");
  
  return result;
  
}

function redirect(url_number, res) {
  
  MongoClient.connect(url, function (err, db) {
      console.log("database connected");

      var collection = db.collection('shortenedurls');
      
      collection.find({
        num: url_number.toString()
      }).toArray(function (err, docs) {
          
        if (docs.length == 0) {
          var error_json = {"error":"This url is not on the database."}
          
          res.json(error_json);
        }else {
          var doc = docs[0];
          res.redirect(doc.url);
          
        }
        
        
      })
    
      db.close();    
      

  })
  
  
  
  
  
  
}

//End Code

// Respond not found to all the wrong routes
app.use(function(req, res, next){
  res.status(404);
  res.type('txt').send('Not found');
});

// Error Middleware
app.use(function(err, req, res, next) {
  if(err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }  
})

app.listen(process.env.PORT, function () {
  console.log('Node.js listening ...');
});

